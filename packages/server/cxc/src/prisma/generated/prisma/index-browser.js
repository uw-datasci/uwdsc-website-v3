
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ApplicationAnswerScalarFieldEnum = {
  id: 'id',
  application_id: 'application_id',
  question_id: 'question_id',
  answer: 'answer',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  profile_id: 'profile_id',
  resume_id: 'resume_id',
  status: 'status',
  role: 'role',
  term: 'term',
  comments: 'comments',
  created_at: 'created_at',
  updated_at: 'updated_at',
  submitted_at: 'submitted_at'
};

exports.Prisma.EventAttendanceScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  profile_id: 'profile_id',
  checked_in: 'checked_in',
  created_at: 'created_at'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  name: 'name',
  registration_required: 'registration_required',
  description: 'description',
  location: 'location',
  start_time: 'start_time',
  buffered_start_time: 'buffered_start_time',
  end_time: 'end_time',
  buffered_end_time: 'buffered_end_time',
  payment_required: 'payment_required',
  image_id: 'image_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  role: 'role',
  nfc_id: 'nfc_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  question_id: 'question_id',
  question: 'question',
  is_required: 'is_required',
  order_num: 'order_num',
  max_length: 'max_length',
  placeholder: 'placeholder',
  help_text: 'help_text',
  role: 'role',
  term: 'term'
};

exports.Prisma.ResumeScalarFieldEnum = {
  id: 'id',
  profile_id: 'profile_id',
  file_path: 'file_path',
  created_at: 'created_at'
};

exports.Prisma.SponsorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo_url: 'logo_url',
  website_url: 'website_url',
  tier: 'tier',
  created_at: 'created_at'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  team_id: 'team_id',
  profile_id: 'profile_id',
  role: 'role',
  created_at: 'created_at',
  joined_at: 'joined_at'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  team_name: 'team_name',
  team_size: 'team_size',
  is_recruiting: 'is_recruiting',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.application_status_enum = exports.$Enums.application_status_enum = {
  draft: 'draft',
  submitted: 'submitted',
  offered: 'offered',
  accepted: 'accepted',
  rejected: 'rejected',
  waitlisted: 'waitlisted'
};

exports.role_enum = exports.$Enums.role_enum = {
  hacker: 'hacker',
  sponsor: 'sponsor',
  mentor: 'mentor',
  volunteer: 'volunteer',
  admin: 'admin',
  default: 'default'
};

exports.sponsor_tier_enum = exports.$Enums.sponsor_tier_enum = {
  bronze: 'bronze',
  silver: 'silver',
  gold: 'gold',
  platinum: 'platinum'
};

exports.team_role_enum = exports.$Enums.team_role_enum = {
  leader: 'leader',
  member: 'member'
};

exports.Prisma.ModelName = {
  ApplicationAnswer: 'ApplicationAnswer',
  Application: 'Application',
  EventAttendance: 'EventAttendance',
  Event: 'Event',
  Profile: 'Profile',
  Question: 'Question',
  Resume: 'Resume',
  Sponsor: 'Sponsor',
  TeamMember: 'TeamMember',
  Team: 'Team'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
